html {
  height: 100%;
  box-sizing: border-box;
  font-size: 100%; }

*,
*:before,
*:after {
  box-sizing: inherit; }

body {
  margin: 0;
  padding: 0;
  overflow-x: hidden;
  background-color: #ededed;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; }

/*
	Create breakpoint mixin

	---
	Example usage

	@include add-breakpoint($name, $lower $upper);
	---

	@param $name:   The name of the breakpoint, eg. phone
	@param $lower:  The minimum value of the breakpoint
	@param $upper:  The maximum value of the breakpoint
*/
/*
	Return a given breakpoint

	---
	Example usage

	$breakpoint: get-breakpoint($name);
	---

	@param $name:   The name of the breakpoint, eg. phone
*/
/*
	Use breakpoint

	---
	Example usage

	body {
		@include breakpoint($name, $direction) {
			background: red;
		}
	}
	---

	@param $name:                  The name of the breakpoint, eg. phone. Must match existing breakpoint created using add-breakpoint()
	@optional-param $direction:    The direction of the breakpoint, eg. phone and up. False if not passed
	
	@options $direction:  no argument: create media-query between given breakpoints dimensions
												up: create media-query from given breakpoint minimum and up
												down: create media-query from given breakpoint maximum and down
												$breakpoint: create media query between the two given breakpoints  
*/
/*
	Create breakpoint mixin

	---
	Example usage

	@include add-breakpoint($name, $lower $upper);
	---

	@param $name:   The name of the breakpoint, eg. phone
	@param $lower:  The minimum value of the breakpoint
	@param $upper:  The maximum value of the breakpoint
*/
/*
	Return a given breakpoint

	---
	Example usage

	$breakpoint: get-breakpoint($name);
	---

	@param $name:   The name of the breakpoint, eg. phone
*/
/*
	Use breakpoint

	---
	Example usage

	body {
		@include breakpoint($name, $direction) {
			background: red;
		}
	}
	---

	@param $name:                  The name of the breakpoint, eg. phone. Must match existing breakpoint created using add-breakpoint()
	@optional-param $direction:    The direction of the breakpoint, eg. phone and up. False if not passed
	
	@options $direction:  no argument: create media-query between given breakpoints dimensions
												up: create media-query from given breakpoint minimum and up
												down: create media-query from given breakpoint maximum and down
												$breakpoint: create media query between the two given breakpoints  
*/
.main-content {
  margin: auto;
  width: 60%; }

@media only screen and (max-width: 767px) {
  .main-content {
    width: 80%; } }

.title {
  font-size: 2rem; }

.logo {
  margin-top: 50px;
  text-align: center; }
  .logo img {
    width: 100%;
    height: 100%; }

.intro-text {
  font-weight: bold;
  text-align: center;
  color: green; }


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zdHlsZXMvc2l0ZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjs7QUFFbEI7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCOztBQUV0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUpBQXFKOztBQUVySjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7O0FBRWI7QUFDQTtBQUNBLGVBQWUsRUFBRTs7QUFFakI7QUFDQSxrQkFBa0I7O0FBRWxCO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBLGlCQUFpQjs7QUFFakI7QUFDQTtBQUNBO0FBQ0EsZUFBZSIsImZpbGUiOiJjc3Mvc2l0ZS5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJodG1sIHtcbiAgaGVpZ2h0OiAxMDAlO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBmb250LXNpemU6IDEwMCU7IH1cblxuKixcbio6YmVmb3JlLFxuKjphZnRlciB7XG4gIGJveC1zaXppbmc6IGluaGVyaXQ7IH1cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgb3ZlcmZsb3cteDogaGlkZGVuO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWRlZGVkO1xuICBmb250LWZhbWlseTogLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCAnU2Vnb2UgVUknLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmLCAnQXBwbGUgQ29sb3IgRW1vamknLCAnU2Vnb2UgVUkgRW1vamknLCAnU2Vnb2UgVUkgU3ltYm9sJzsgfVxuXG4vKlxyXG5cdENyZWF0ZSBicmVha3BvaW50IG1peGluXHJcblxyXG5cdC0tLVxyXG5cdEV4YW1wbGUgdXNhZ2VcclxuXHJcblx0QGluY2x1ZGUgYWRkLWJyZWFrcG9pbnQoJG5hbWUsICRsb3dlciAkdXBwZXIpO1xyXG5cdC0tLVxyXG5cclxuXHRAcGFyYW0gJG5hbWU6ICAgVGhlIG5hbWUgb2YgdGhlIGJyZWFrcG9pbnQsIGVnLiBwaG9uZVxyXG5cdEBwYXJhbSAkbG93ZXI6ICBUaGUgbWluaW11bSB2YWx1ZSBvZiB0aGUgYnJlYWtwb2ludFxyXG5cdEBwYXJhbSAkdXBwZXI6ICBUaGUgbWF4aW11bSB2YWx1ZSBvZiB0aGUgYnJlYWtwb2ludFxyXG4qL1xuLypcclxuXHRSZXR1cm4gYSBnaXZlbiBicmVha3BvaW50XHJcblxyXG5cdC0tLVxyXG5cdEV4YW1wbGUgdXNhZ2VcclxuXHJcblx0JGJyZWFrcG9pbnQ6IGdldC1icmVha3BvaW50KCRuYW1lKTtcclxuXHQtLS1cclxuXHJcblx0QHBhcmFtICRuYW1lOiAgIFRoZSBuYW1lIG9mIHRoZSBicmVha3BvaW50LCBlZy4gcGhvbmVcclxuKi9cbi8qXHJcblx0VXNlIGJyZWFrcG9pbnRcclxuXHJcblx0LS0tXHJcblx0RXhhbXBsZSB1c2FnZVxyXG5cclxuXHRib2R5IHtcclxuXHRcdEBpbmNsdWRlIGJyZWFrcG9pbnQoJG5hbWUsICRkaXJlY3Rpb24pIHtcclxuXHRcdFx0YmFja2dyb3VuZDogcmVkO1xyXG5cdFx0fVxyXG5cdH1cclxuXHQtLS1cclxuXHJcblx0QHBhcmFtICRuYW1lOiAgICAgICAgICAgICAgICAgIFRoZSBuYW1lIG9mIHRoZSBicmVha3BvaW50LCBlZy4gcGhvbmUuIE11c3QgbWF0Y2ggZXhpc3RpbmcgYnJlYWtwb2ludCBjcmVhdGVkIHVzaW5nIGFkZC1icmVha3BvaW50KClcclxuXHRAb3B0aW9uYWwtcGFyYW0gJGRpcmVjdGlvbjogICAgVGhlIGRpcmVjdGlvbiBvZiB0aGUgYnJlYWtwb2ludCwgZWcuIHBob25lIGFuZCB1cC4gRmFsc2UgaWYgbm90IHBhc3NlZFxyXG5cdFxyXG5cdEBvcHRpb25zICRkaXJlY3Rpb246ICBubyBhcmd1bWVudDogY3JlYXRlIG1lZGlhLXF1ZXJ5IGJldHdlZW4gZ2l2ZW4gYnJlYWtwb2ludHMgZGltZW5zaW9uc1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHR1cDogY3JlYXRlIG1lZGlhLXF1ZXJ5IGZyb20gZ2l2ZW4gYnJlYWtwb2ludCBtaW5pbXVtIGFuZCB1cFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRkb3duOiBjcmVhdGUgbWVkaWEtcXVlcnkgZnJvbSBnaXZlbiBicmVha3BvaW50IG1heGltdW0gYW5kIGRvd25cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0JGJyZWFrcG9pbnQ6IGNyZWF0ZSBtZWRpYSBxdWVyeSBiZXR3ZWVuIHRoZSB0d28gZ2l2ZW4gYnJlYWtwb2ludHMgIFxyXG4qL1xuLypcclxuXHRDcmVhdGUgYnJlYWtwb2ludCBtaXhpblxyXG5cclxuXHQtLS1cclxuXHRFeGFtcGxlIHVzYWdlXHJcblxyXG5cdEBpbmNsdWRlIGFkZC1icmVha3BvaW50KCRuYW1lLCAkbG93ZXIgJHVwcGVyKTtcclxuXHQtLS1cclxuXHJcblx0QHBhcmFtICRuYW1lOiAgIFRoZSBuYW1lIG9mIHRoZSBicmVha3BvaW50LCBlZy4gcGhvbmVcclxuXHRAcGFyYW0gJGxvd2VyOiAgVGhlIG1pbmltdW0gdmFsdWUgb2YgdGhlIGJyZWFrcG9pbnRcclxuXHRAcGFyYW0gJHVwcGVyOiAgVGhlIG1heGltdW0gdmFsdWUgb2YgdGhlIGJyZWFrcG9pbnRcclxuKi9cbi8qXHJcblx0UmV0dXJuIGEgZ2l2ZW4gYnJlYWtwb2ludFxyXG5cclxuXHQtLS1cclxuXHRFeGFtcGxlIHVzYWdlXHJcblxyXG5cdCRicmVha3BvaW50OiBnZXQtYnJlYWtwb2ludCgkbmFtZSk7XHJcblx0LS0tXHJcblxyXG5cdEBwYXJhbSAkbmFtZTogICBUaGUgbmFtZSBvZiB0aGUgYnJlYWtwb2ludCwgZWcuIHBob25lXHJcbiovXG4vKlxyXG5cdFVzZSBicmVha3BvaW50XHJcblxyXG5cdC0tLVxyXG5cdEV4YW1wbGUgdXNhZ2VcclxuXHJcblx0Ym9keSB7XHJcblx0XHRAaW5jbHVkZSBicmVha3BvaW50KCRuYW1lLCAkZGlyZWN0aW9uKSB7XHJcblx0XHRcdGJhY2tncm91bmQ6IHJlZDtcclxuXHRcdH1cclxuXHR9XHJcblx0LS0tXHJcblxyXG5cdEBwYXJhbSAkbmFtZTogICAgICAgICAgICAgICAgICBUaGUgbmFtZSBvZiB0aGUgYnJlYWtwb2ludCwgZWcuIHBob25lLiBNdXN0IG1hdGNoIGV4aXN0aW5nIGJyZWFrcG9pbnQgY3JlYXRlZCB1c2luZyBhZGQtYnJlYWtwb2ludCgpXHJcblx0QG9wdGlvbmFsLXBhcmFtICRkaXJlY3Rpb246ICAgIFRoZSBkaXJlY3Rpb24gb2YgdGhlIGJyZWFrcG9pbnQsIGVnLiBwaG9uZSBhbmQgdXAuIEZhbHNlIGlmIG5vdCBwYXNzZWRcclxuXHRcclxuXHRAb3B0aW9ucyAkZGlyZWN0aW9uOiAgbm8gYXJndW1lbnQ6IGNyZWF0ZSBtZWRpYS1xdWVyeSBiZXR3ZWVuIGdpdmVuIGJyZWFrcG9pbnRzIGRpbWVuc2lvbnNcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0dXA6IGNyZWF0ZSBtZWRpYS1xdWVyeSBmcm9tIGdpdmVuIGJyZWFrcG9pbnQgbWluaW11bSBhbmQgdXBcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0ZG93bjogY3JlYXRlIG1lZGlhLXF1ZXJ5IGZyb20gZ2l2ZW4gYnJlYWtwb2ludCBtYXhpbXVtIGFuZCBkb3duXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdCRicmVha3BvaW50OiBjcmVhdGUgbWVkaWEgcXVlcnkgYmV0d2VlbiB0aGUgdHdvIGdpdmVuIGJyZWFrcG9pbnRzICBcclxuKi9cbi5tYWluLWNvbnRlbnQge1xuICBtYXJnaW46IGF1dG87XG4gIHdpZHRoOiA2MCU7IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjdweCkge1xuICAubWFpbi1jb250ZW50IHtcbiAgICB3aWR0aDogODAlOyB9IH1cblxuLnRpdGxlIHtcbiAgZm9udC1zaXplOiAycmVtOyB9XG5cbi5sb2dvIHtcbiAgbWFyZ2luLXRvcDogNTBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIC5sb2dvIGltZyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlOyB9XG5cbi5pbnRyby10ZXh0IHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY29sb3I6IGdyZWVuOyB9XG4iXSwic291cmNlUm9vdCI6IiJ9*/